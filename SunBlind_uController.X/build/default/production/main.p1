Version 3.2 HI-TECH Software Intermediate Code
"224 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic12f675.h
[s S14 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S14 . GP0 GP1 GP2 GP3 GP4 GP5 ]
"232
[s S15 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S15 . GPIO0 GPIO1 GPIO2 GPIO3 GPIO4 GPIO5 ]
"223
[u S13 `S14 1 `S15 1 ]
[n S13 . . . ]
"241
[v _GPIObits `VS13 ~T0 @X0 0 e@5 ]
"332
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . GPIF INTF T0IF GPIE INTE T0IE PEIE GIE ]
"342
[s S20 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S20 . . TMR0IF . TMR0IE ]
"331
[u S18 `S19 1 `S20 1 ]
[n S18 . . . ]
"349
[v _INTCONbits `VS18 ~T0 @X0 0 e@11 ]
"72
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"76 main.c
[v _SETpinRST `(v ~T0 @X0 0 ef1`i ]
[p mainexit ]
"564 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic12f675.h
[v _CMCON `Vuc ~T0 @X0 0 e@25 ]
"1404
[v _ANSEL `Vuc ~T0 @X0 0 e@159 ]
"218
[v _GPIO `Vuc ~T0 @X0 0 e@5 ]
"1747
[v _TRISIO0 `Vb ~T0 @X0 0 e@1064 ]
"1750
[v _TRISIO1 `Vb ~T0 @X0 0 e@1065 ]
"1756
[v _TRISIO3 `Vb ~T0 @X0 0 e@1067 ]
"1753
[v _TRISIO2 `Vb ~T0 @X0 0 e@1066 ]
"1759
[v _TRISIO4 `Vb ~T0 @X0 0 e@1068 ]
"1762
[v _TRISIO5 `Vb ~T0 @X0 0 e@1069 ]
"78 main.c
[v _SetTMR0 `(uc ~T0 @X0 0 ef1`ui ]
"733 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic12f675.h
[s S42 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S42 . PS PSA T0SE T0CS INTEDG nGPPU ]
"741
[s S43 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S43 . PS0 PS1 PS2 ]
"732
[u S41 `S42 1 `S43 1 ]
[n S41 . . . ]
"747
[v _OPTION_REGbits `VS41 ~T0 @X0 0 e@129 ]
"4 main.c
[p x FOSC=INTRCIO ]
"5
[p x WDTE=OFF ]
"6
[p x PWRTE=ON ]
"7
[p x MCLRE=OFF ]
"8
[p x BOREN=OFF ]
"9
[p x CP=OFF ]
"10
[p x CPD=OFF ]
[; ;xc.h: 18: extern const char __xc8_OPTIM_SPEED;
[; ;xc.h: 20: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic.h: 9: extern unsigned char __osccal_val(void);
[; ;pic12f675.h: 52: extern volatile unsigned char INDF __at(0x000);
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic12f675.h
[; ;pic12f675.h: 54: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic12f675.h: 57: typedef union {
[; ;pic12f675.h: 58: struct {
[; ;pic12f675.h: 59: unsigned INDF :8;
[; ;pic12f675.h: 60: };
[; ;pic12f675.h: 61: } INDFbits_t;
[; ;pic12f675.h: 62: extern volatile INDFbits_t INDFbits __at(0x000);
[; ;pic12f675.h: 72: extern volatile unsigned char TMR0 __at(0x001);
"74
[; ;pic12f675.h: 74: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic12f675.h: 77: typedef union {
[; ;pic12f675.h: 78: struct {
[; ;pic12f675.h: 79: unsigned TMR0 :8;
[; ;pic12f675.h: 80: };
[; ;pic12f675.h: 81: } TMR0bits_t;
[; ;pic12f675.h: 82: extern volatile TMR0bits_t TMR0bits __at(0x001);
[; ;pic12f675.h: 92: extern volatile unsigned char PCL __at(0x002);
"94
[; ;pic12f675.h: 94: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic12f675.h: 97: typedef union {
[; ;pic12f675.h: 98: struct {
[; ;pic12f675.h: 99: unsigned PCL :8;
[; ;pic12f675.h: 100: };
[; ;pic12f675.h: 101: } PCLbits_t;
[; ;pic12f675.h: 102: extern volatile PCLbits_t PCLbits __at(0x002);
[; ;pic12f675.h: 112: extern volatile unsigned char STATUS __at(0x003);
"114
[; ;pic12f675.h: 114: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic12f675.h: 117: typedef union {
[; ;pic12f675.h: 118: struct {
[; ;pic12f675.h: 119: unsigned C :1;
[; ;pic12f675.h: 120: unsigned DC :1;
[; ;pic12f675.h: 121: unsigned Z :1;
[; ;pic12f675.h: 122: unsigned nPD :1;
[; ;pic12f675.h: 123: unsigned nTO :1;
[; ;pic12f675.h: 124: unsigned RP :2;
[; ;pic12f675.h: 125: unsigned IRP :1;
[; ;pic12f675.h: 126: };
[; ;pic12f675.h: 127: struct {
[; ;pic12f675.h: 128: unsigned :5;
[; ;pic12f675.h: 129: unsigned RP0 :1;
[; ;pic12f675.h: 130: unsigned RP1 :1;
[; ;pic12f675.h: 131: };
[; ;pic12f675.h: 132: struct {
[; ;pic12f675.h: 133: unsigned CARRY :1;
[; ;pic12f675.h: 134: unsigned :1;
[; ;pic12f675.h: 135: unsigned ZERO :1;
[; ;pic12f675.h: 136: };
[; ;pic12f675.h: 137: } STATUSbits_t;
[; ;pic12f675.h: 138: extern volatile STATUSbits_t STATUSbits __at(0x003);
[; ;pic12f675.h: 198: extern volatile unsigned char FSR __at(0x004);
"200
[; ;pic12f675.h: 200: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic12f675.h: 203: typedef union {
[; ;pic12f675.h: 204: struct {
[; ;pic12f675.h: 205: unsigned FSR :8;
[; ;pic12f675.h: 206: };
[; ;pic12f675.h: 207: } FSRbits_t;
[; ;pic12f675.h: 208: extern volatile FSRbits_t FSRbits __at(0x004);
[; ;pic12f675.h: 218: extern volatile unsigned char GPIO __at(0x005);
"220
[; ;pic12f675.h: 220: asm("GPIO equ 05h");
[; <" GPIO equ 05h ;# ">
[; ;pic12f675.h: 223: typedef union {
[; ;pic12f675.h: 224: struct {
[; ;pic12f675.h: 225: unsigned GP0 :1;
[; ;pic12f675.h: 226: unsigned GP1 :1;
[; ;pic12f675.h: 227: unsigned GP2 :1;
[; ;pic12f675.h: 228: unsigned GP3 :1;
[; ;pic12f675.h: 229: unsigned GP4 :1;
[; ;pic12f675.h: 230: unsigned GP5 :1;
[; ;pic12f675.h: 231: };
[; ;pic12f675.h: 232: struct {
[; ;pic12f675.h: 233: unsigned GPIO0 :1;
[; ;pic12f675.h: 234: unsigned GPIO1 :1;
[; ;pic12f675.h: 235: unsigned GPIO2 :1;
[; ;pic12f675.h: 236: unsigned GPIO3 :1;
[; ;pic12f675.h: 237: unsigned GPIO4 :1;
[; ;pic12f675.h: 238: unsigned GPIO5 :1;
[; ;pic12f675.h: 239: };
[; ;pic12f675.h: 240: } GPIObits_t;
[; ;pic12f675.h: 241: extern volatile GPIObits_t GPIObits __at(0x005);
[; ;pic12f675.h: 306: extern volatile unsigned char PCLATH __at(0x00A);
"308
[; ;pic12f675.h: 308: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic12f675.h: 311: typedef union {
[; ;pic12f675.h: 312: struct {
[; ;pic12f675.h: 313: unsigned PCLATH :5;
[; ;pic12f675.h: 314: };
[; ;pic12f675.h: 315: } PCLATHbits_t;
[; ;pic12f675.h: 316: extern volatile PCLATHbits_t PCLATHbits __at(0x00A);
[; ;pic12f675.h: 326: extern volatile unsigned char INTCON __at(0x00B);
"328
[; ;pic12f675.h: 328: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic12f675.h: 331: typedef union {
[; ;pic12f675.h: 332: struct {
[; ;pic12f675.h: 333: unsigned GPIF :1;
[; ;pic12f675.h: 334: unsigned INTF :1;
[; ;pic12f675.h: 335: unsigned T0IF :1;
[; ;pic12f675.h: 336: unsigned GPIE :1;
[; ;pic12f675.h: 337: unsigned INTE :1;
[; ;pic12f675.h: 338: unsigned T0IE :1;
[; ;pic12f675.h: 339: unsigned PEIE :1;
[; ;pic12f675.h: 340: unsigned GIE :1;
[; ;pic12f675.h: 341: };
[; ;pic12f675.h: 342: struct {
[; ;pic12f675.h: 343: unsigned :2;
[; ;pic12f675.h: 344: unsigned TMR0IF :1;
[; ;pic12f675.h: 345: unsigned :2;
[; ;pic12f675.h: 346: unsigned TMR0IE :1;
[; ;pic12f675.h: 347: };
[; ;pic12f675.h: 348: } INTCONbits_t;
[; ;pic12f675.h: 349: extern volatile INTCONbits_t INTCONbits __at(0x00B);
[; ;pic12f675.h: 404: extern volatile unsigned char PIR1 __at(0x00C);
"406
[; ;pic12f675.h: 406: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic12f675.h: 409: typedef union {
[; ;pic12f675.h: 410: struct {
[; ;pic12f675.h: 411: unsigned TMR1IF :1;
[; ;pic12f675.h: 412: unsigned :2;
[; ;pic12f675.h: 413: unsigned CMIF :1;
[; ;pic12f675.h: 414: unsigned :2;
[; ;pic12f675.h: 415: unsigned ADIF :1;
[; ;pic12f675.h: 416: unsigned EEIF :1;
[; ;pic12f675.h: 417: };
[; ;pic12f675.h: 418: struct {
[; ;pic12f675.h: 419: unsigned T1IF :1;
[; ;pic12f675.h: 420: };
[; ;pic12f675.h: 421: } PIR1bits_t;
[; ;pic12f675.h: 422: extern volatile PIR1bits_t PIR1bits __at(0x00C);
[; ;pic12f675.h: 452: extern volatile unsigned short TMR1 __at(0x00E);
"454
[; ;pic12f675.h: 454: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic12f675.h: 459: extern volatile unsigned char TMR1L __at(0x00E);
"461
[; ;pic12f675.h: 461: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic12f675.h: 464: typedef union {
[; ;pic12f675.h: 465: struct {
[; ;pic12f675.h: 466: unsigned TMR1L :8;
[; ;pic12f675.h: 467: };
[; ;pic12f675.h: 468: } TMR1Lbits_t;
[; ;pic12f675.h: 469: extern volatile TMR1Lbits_t TMR1Lbits __at(0x00E);
[; ;pic12f675.h: 479: extern volatile unsigned char TMR1H __at(0x00F);
"481
[; ;pic12f675.h: 481: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic12f675.h: 484: typedef union {
[; ;pic12f675.h: 485: struct {
[; ;pic12f675.h: 486: unsigned TMR1H :8;
[; ;pic12f675.h: 487: };
[; ;pic12f675.h: 488: } TMR1Hbits_t;
[; ;pic12f675.h: 489: extern volatile TMR1Hbits_t TMR1Hbits __at(0x00F);
[; ;pic12f675.h: 499: extern volatile unsigned char T1CON __at(0x010);
"501
[; ;pic12f675.h: 501: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic12f675.h: 504: typedef union {
[; ;pic12f675.h: 505: struct {
[; ;pic12f675.h: 506: unsigned TMR1ON :1;
[; ;pic12f675.h: 507: unsigned TMR1CS :1;
[; ;pic12f675.h: 508: unsigned nT1SYNC :1;
[; ;pic12f675.h: 509: unsigned T1OSCEN :1;
[; ;pic12f675.h: 510: unsigned T1CKPS :2;
[; ;pic12f675.h: 511: unsigned TMR1GE :1;
[; ;pic12f675.h: 512: };
[; ;pic12f675.h: 513: struct {
[; ;pic12f675.h: 514: unsigned :4;
[; ;pic12f675.h: 515: unsigned T1CKPS0 :1;
[; ;pic12f675.h: 516: unsigned T1CKPS1 :1;
[; ;pic12f675.h: 517: };
[; ;pic12f675.h: 518: } T1CONbits_t;
[; ;pic12f675.h: 519: extern volatile T1CONbits_t T1CONbits __at(0x010);
[; ;pic12f675.h: 564: extern volatile unsigned char CMCON __at(0x019);
"566
[; ;pic12f675.h: 566: asm("CMCON equ 019h");
[; <" CMCON equ 019h ;# ">
[; ;pic12f675.h: 569: typedef union {
[; ;pic12f675.h: 570: struct {
[; ;pic12f675.h: 571: unsigned CM :3;
[; ;pic12f675.h: 572: unsigned CIS :1;
[; ;pic12f675.h: 573: unsigned CINV :1;
[; ;pic12f675.h: 574: unsigned :1;
[; ;pic12f675.h: 575: unsigned COUT :1;
[; ;pic12f675.h: 576: };
[; ;pic12f675.h: 577: struct {
[; ;pic12f675.h: 578: unsigned CM0 :1;
[; ;pic12f675.h: 579: unsigned CM1 :1;
[; ;pic12f675.h: 580: unsigned CM2 :1;
[; ;pic12f675.h: 581: };
[; ;pic12f675.h: 582: } CMCONbits_t;
[; ;pic12f675.h: 583: extern volatile CMCONbits_t CMCONbits __at(0x019);
[; ;pic12f675.h: 623: extern volatile unsigned char ADRESH __at(0x01E);
"625
[; ;pic12f675.h: 625: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic12f675.h: 628: typedef union {
[; ;pic12f675.h: 629: struct {
[; ;pic12f675.h: 630: unsigned ADRESH :8;
[; ;pic12f675.h: 631: };
[; ;pic12f675.h: 632: } ADRESHbits_t;
[; ;pic12f675.h: 633: extern volatile ADRESHbits_t ADRESHbits __at(0x01E);
[; ;pic12f675.h: 643: extern volatile unsigned char ADCON0 __at(0x01F);
"645
[; ;pic12f675.h: 645: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic12f675.h: 648: typedef union {
[; ;pic12f675.h: 649: struct {
[; ;pic12f675.h: 650: unsigned ADON :1;
[; ;pic12f675.h: 651: unsigned GO_nDONE :1;
[; ;pic12f675.h: 652: unsigned CHS :2;
[; ;pic12f675.h: 653: unsigned :2;
[; ;pic12f675.h: 654: unsigned VCFG :1;
[; ;pic12f675.h: 655: unsigned ADFM :1;
[; ;pic12f675.h: 656: };
[; ;pic12f675.h: 657: struct {
[; ;pic12f675.h: 658: unsigned :1;
[; ;pic12f675.h: 659: unsigned GO_DONE :1;
[; ;pic12f675.h: 660: unsigned CHS0 :1;
[; ;pic12f675.h: 661: unsigned CHS1 :1;
[; ;pic12f675.h: 662: };
[; ;pic12f675.h: 663: struct {
[; ;pic12f675.h: 664: unsigned :1;
[; ;pic12f675.h: 665: unsigned nDONE :1;
[; ;pic12f675.h: 666: };
[; ;pic12f675.h: 667: struct {
[; ;pic12f675.h: 668: unsigned :1;
[; ;pic12f675.h: 669: unsigned GO :1;
[; ;pic12f675.h: 670: };
[; ;pic12f675.h: 671: } ADCON0bits_t;
[; ;pic12f675.h: 672: extern volatile ADCON0bits_t ADCON0bits __at(0x01F);
[; ;pic12f675.h: 727: extern volatile unsigned char OPTION_REG __at(0x081);
"729
[; ;pic12f675.h: 729: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic12f675.h: 732: typedef union {
[; ;pic12f675.h: 733: struct {
[; ;pic12f675.h: 734: unsigned PS :3;
[; ;pic12f675.h: 735: unsigned PSA :1;
[; ;pic12f675.h: 736: unsigned T0SE :1;
[; ;pic12f675.h: 737: unsigned T0CS :1;
[; ;pic12f675.h: 738: unsigned INTEDG :1;
[; ;pic12f675.h: 739: unsigned nGPPU :1;
[; ;pic12f675.h: 740: };
[; ;pic12f675.h: 741: struct {
[; ;pic12f675.h: 742: unsigned PS0 :1;
[; ;pic12f675.h: 743: unsigned PS1 :1;
[; ;pic12f675.h: 744: unsigned PS2 :1;
[; ;pic12f675.h: 745: };
[; ;pic12f675.h: 746: } OPTION_REGbits_t;
[; ;pic12f675.h: 747: extern volatile OPTION_REGbits_t OPTION_REGbits __at(0x081);
[; ;pic12f675.h: 797: extern volatile unsigned char TRISIO __at(0x085);
"799
[; ;pic12f675.h: 799: asm("TRISIO equ 085h");
[; <" TRISIO equ 085h ;# ">
[; ;pic12f675.h: 802: typedef union {
[; ;pic12f675.h: 803: struct {
[; ;pic12f675.h: 804: unsigned TRISIO0 :1;
[; ;pic12f675.h: 805: unsigned TRISIO1 :1;
[; ;pic12f675.h: 806: unsigned TRISIO2 :1;
[; ;pic12f675.h: 807: unsigned TRISIO3 :1;
[; ;pic12f675.h: 808: unsigned TRISIO4 :1;
[; ;pic12f675.h: 809: unsigned TRISIO5 :1;
[; ;pic12f675.h: 810: };
[; ;pic12f675.h: 811: } TRISIObits_t;
[; ;pic12f675.h: 812: extern volatile TRISIObits_t TRISIObits __at(0x085);
[; ;pic12f675.h: 847: extern volatile unsigned char PIE1 __at(0x08C);
"849
[; ;pic12f675.h: 849: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic12f675.h: 852: typedef union {
[; ;pic12f675.h: 853: struct {
[; ;pic12f675.h: 854: unsigned TMR1IE :1;
[; ;pic12f675.h: 855: unsigned :2;
[; ;pic12f675.h: 856: unsigned CMIE :1;
[; ;pic12f675.h: 857: unsigned :2;
[; ;pic12f675.h: 858: unsigned ADIE :1;
[; ;pic12f675.h: 859: unsigned EEIE :1;
[; ;pic12f675.h: 860: };
[; ;pic12f675.h: 861: struct {
[; ;pic12f675.h: 862: unsigned T1IE :1;
[; ;pic12f675.h: 863: };
[; ;pic12f675.h: 864: } PIE1bits_t;
[; ;pic12f675.h: 865: extern volatile PIE1bits_t PIE1bits __at(0x08C);
[; ;pic12f675.h: 895: extern volatile unsigned char PCON __at(0x08E);
"897
[; ;pic12f675.h: 897: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic12f675.h: 900: typedef union {
[; ;pic12f675.h: 901: struct {
[; ;pic12f675.h: 902: unsigned nBOR :1;
[; ;pic12f675.h: 903: unsigned nPOR :1;
[; ;pic12f675.h: 904: };
[; ;pic12f675.h: 905: struct {
[; ;pic12f675.h: 906: unsigned nBOD :1;
[; ;pic12f675.h: 907: };
[; ;pic12f675.h: 908: } PCONbits_t;
[; ;pic12f675.h: 909: extern volatile PCONbits_t PCONbits __at(0x08E);
[; ;pic12f675.h: 929: extern volatile unsigned char OSCCAL __at(0x090);
"931
[; ;pic12f675.h: 931: asm("OSCCAL equ 090h");
[; <" OSCCAL equ 090h ;# ">
[; ;pic12f675.h: 934: typedef union {
[; ;pic12f675.h: 935: struct {
[; ;pic12f675.h: 936: unsigned :2;
[; ;pic12f675.h: 937: unsigned CAL :6;
[; ;pic12f675.h: 938: };
[; ;pic12f675.h: 939: struct {
[; ;pic12f675.h: 940: unsigned :2;
[; ;pic12f675.h: 941: unsigned CAL0 :1;
[; ;pic12f675.h: 942: unsigned CAL1 :1;
[; ;pic12f675.h: 943: unsigned CAL2 :1;
[; ;pic12f675.h: 944: unsigned CAL3 :1;
[; ;pic12f675.h: 945: unsigned CAL4 :1;
[; ;pic12f675.h: 946: unsigned CAL5 :1;
[; ;pic12f675.h: 947: };
[; ;pic12f675.h: 948: } OSCCALbits_t;
[; ;pic12f675.h: 949: extern volatile OSCCALbits_t OSCCALbits __at(0x090);
[; ;pic12f675.h: 989: extern volatile unsigned char WPU __at(0x095);
"991
[; ;pic12f675.h: 991: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic12f675.h: 994: typedef union {
[; ;pic12f675.h: 995: struct {
[; ;pic12f675.h: 996: unsigned WPU0 :1;
[; ;pic12f675.h: 997: unsigned WPU1 :1;
[; ;pic12f675.h: 998: unsigned WPU2 :1;
[; ;pic12f675.h: 999: unsigned :1;
[; ;pic12f675.h: 1000: unsigned WPU4 :1;
[; ;pic12f675.h: 1001: unsigned WPU5 :1;
[; ;pic12f675.h: 1002: };
[; ;pic12f675.h: 1003: } WPUbits_t;
[; ;pic12f675.h: 1004: extern volatile WPUbits_t WPUbits __at(0x095);
[; ;pic12f675.h: 1034: extern volatile unsigned char IOC __at(0x096);
"1036
[; ;pic12f675.h: 1036: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic12f675.h: 1039: extern volatile unsigned char IOCB __at(0x096);
"1041
[; ;pic12f675.h: 1041: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic12f675.h: 1044: typedef union {
[; ;pic12f675.h: 1045: struct {
[; ;pic12f675.h: 1046: unsigned IOC0 :1;
[; ;pic12f675.h: 1047: unsigned IOC1 :1;
[; ;pic12f675.h: 1048: unsigned IOC2 :1;
[; ;pic12f675.h: 1049: unsigned IOC3 :1;
[; ;pic12f675.h: 1050: unsigned IOC4 :1;
[; ;pic12f675.h: 1051: unsigned IOC5 :1;
[; ;pic12f675.h: 1052: };
[; ;pic12f675.h: 1053: struct {
[; ;pic12f675.h: 1054: unsigned IOCB0 :1;
[; ;pic12f675.h: 1055: unsigned IOCB1 :1;
[; ;pic12f675.h: 1056: unsigned IOCB2 :1;
[; ;pic12f675.h: 1057: unsigned IOCB3 :1;
[; ;pic12f675.h: 1058: unsigned IOCB4 :1;
[; ;pic12f675.h: 1059: unsigned IOCB5 :1;
[; ;pic12f675.h: 1060: };
[; ;pic12f675.h: 1061: } IOCbits_t;
[; ;pic12f675.h: 1062: extern volatile IOCbits_t IOCbits __at(0x096);
[; ;pic12f675.h: 1125: typedef union {
[; ;pic12f675.h: 1126: struct {
[; ;pic12f675.h: 1127: unsigned IOC0 :1;
[; ;pic12f675.h: 1128: unsigned IOC1 :1;
[; ;pic12f675.h: 1129: unsigned IOC2 :1;
[; ;pic12f675.h: 1130: unsigned IOC3 :1;
[; ;pic12f675.h: 1131: unsigned IOC4 :1;
[; ;pic12f675.h: 1132: unsigned IOC5 :1;
[; ;pic12f675.h: 1133: };
[; ;pic12f675.h: 1134: struct {
[; ;pic12f675.h: 1135: unsigned IOCB0 :1;
[; ;pic12f675.h: 1136: unsigned IOCB1 :1;
[; ;pic12f675.h: 1137: unsigned IOCB2 :1;
[; ;pic12f675.h: 1138: unsigned IOCB3 :1;
[; ;pic12f675.h: 1139: unsigned IOCB4 :1;
[; ;pic12f675.h: 1140: unsigned IOCB5 :1;
[; ;pic12f675.h: 1141: };
[; ;pic12f675.h: 1142: } IOCBbits_t;
[; ;pic12f675.h: 1143: extern volatile IOCBbits_t IOCBbits __at(0x096);
[; ;pic12f675.h: 1208: extern volatile unsigned char VRCON __at(0x099);
"1210
[; ;pic12f675.h: 1210: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic12f675.h: 1213: typedef union {
[; ;pic12f675.h: 1214: struct {
[; ;pic12f675.h: 1215: unsigned VR :4;
[; ;pic12f675.h: 1216: unsigned :1;
[; ;pic12f675.h: 1217: unsigned VRR :1;
[; ;pic12f675.h: 1218: unsigned :1;
[; ;pic12f675.h: 1219: unsigned VREN :1;
[; ;pic12f675.h: 1220: };
[; ;pic12f675.h: 1221: struct {
[; ;pic12f675.h: 1222: unsigned VR0 :1;
[; ;pic12f675.h: 1223: unsigned VR1 :1;
[; ;pic12f675.h: 1224: unsigned VR2 :1;
[; ;pic12f675.h: 1225: unsigned VR3 :1;
[; ;pic12f675.h: 1226: };
[; ;pic12f675.h: 1227: } VRCONbits_t;
[; ;pic12f675.h: 1228: extern volatile VRCONbits_t VRCONbits __at(0x099);
[; ;pic12f675.h: 1268: extern volatile unsigned char EEDATA __at(0x09A);
"1270
[; ;pic12f675.h: 1270: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic12f675.h: 1273: extern volatile unsigned char EEDAT __at(0x09A);
"1275
[; ;pic12f675.h: 1275: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic12f675.h: 1278: typedef union {
[; ;pic12f675.h: 1279: struct {
[; ;pic12f675.h: 1280: unsigned EEDATA :8;
[; ;pic12f675.h: 1281: };
[; ;pic12f675.h: 1282: } EEDATAbits_t;
[; ;pic12f675.h: 1283: extern volatile EEDATAbits_t EEDATAbits __at(0x09A);
[; ;pic12f675.h: 1291: typedef union {
[; ;pic12f675.h: 1292: struct {
[; ;pic12f675.h: 1293: unsigned EEDATA :8;
[; ;pic12f675.h: 1294: };
[; ;pic12f675.h: 1295: } EEDATbits_t;
[; ;pic12f675.h: 1296: extern volatile EEDATbits_t EEDATbits __at(0x09A);
[; ;pic12f675.h: 1306: extern volatile unsigned char EEADR __at(0x09B);
"1308
[; ;pic12f675.h: 1308: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic12f675.h: 1311: typedef union {
[; ;pic12f675.h: 1312: struct {
[; ;pic12f675.h: 1313: unsigned EEADR :7;
[; ;pic12f675.h: 1314: };
[; ;pic12f675.h: 1315: } EEADRbits_t;
[; ;pic12f675.h: 1316: extern volatile EEADRbits_t EEADRbits __at(0x09B);
[; ;pic12f675.h: 1326: extern volatile unsigned char EECON1 __at(0x09C);
"1328
[; ;pic12f675.h: 1328: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic12f675.h: 1331: typedef union {
[; ;pic12f675.h: 1332: struct {
[; ;pic12f675.h: 1333: unsigned RD :1;
[; ;pic12f675.h: 1334: unsigned WR :1;
[; ;pic12f675.h: 1335: unsigned WREN :1;
[; ;pic12f675.h: 1336: unsigned WRERR :1;
[; ;pic12f675.h: 1337: };
[; ;pic12f675.h: 1338: } EECON1bits_t;
[; ;pic12f675.h: 1339: extern volatile EECON1bits_t EECON1bits __at(0x09C);
[; ;pic12f675.h: 1364: extern volatile unsigned char EECON2 __at(0x09D);
"1366
[; ;pic12f675.h: 1366: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic12f675.h: 1369: typedef union {
[; ;pic12f675.h: 1370: struct {
[; ;pic12f675.h: 1371: unsigned EECON2 :8;
[; ;pic12f675.h: 1372: };
[; ;pic12f675.h: 1373: } EECON2bits_t;
[; ;pic12f675.h: 1374: extern volatile EECON2bits_t EECON2bits __at(0x09D);
[; ;pic12f675.h: 1384: extern volatile unsigned char ADRESL __at(0x09E);
"1386
[; ;pic12f675.h: 1386: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic12f675.h: 1389: typedef union {
[; ;pic12f675.h: 1390: struct {
[; ;pic12f675.h: 1391: unsigned ADRESL :8;
[; ;pic12f675.h: 1392: };
[; ;pic12f675.h: 1393: } ADRESLbits_t;
[; ;pic12f675.h: 1394: extern volatile ADRESLbits_t ADRESLbits __at(0x09E);
[; ;pic12f675.h: 1404: extern volatile unsigned char ANSEL __at(0x09F);
"1406
[; ;pic12f675.h: 1406: asm("ANSEL equ 09Fh");
[; <" ANSEL equ 09Fh ;# ">
[; ;pic12f675.h: 1409: typedef union {
[; ;pic12f675.h: 1410: struct {
[; ;pic12f675.h: 1411: unsigned ANS :4;
[; ;pic12f675.h: 1412: unsigned ADCS :3;
[; ;pic12f675.h: 1413: };
[; ;pic12f675.h: 1414: struct {
[; ;pic12f675.h: 1415: unsigned ANS0 :1;
[; ;pic12f675.h: 1416: unsigned ANS1 :1;
[; ;pic12f675.h: 1417: unsigned ANS2 :1;
[; ;pic12f675.h: 1418: unsigned ANS3 :1;
[; ;pic12f675.h: 1419: unsigned ADCS0 :1;
[; ;pic12f675.h: 1420: unsigned ADCS1 :1;
[; ;pic12f675.h: 1421: unsigned ADCS2 :1;
[; ;pic12f675.h: 1422: };
[; ;pic12f675.h: 1423: } ANSELbits_t;
[; ;pic12f675.h: 1424: extern volatile ANSELbits_t ANSELbits __at(0x09F);
[; ;pic12f675.h: 1480: extern volatile __bit ADCS0 __at(0x4FC);
[; ;pic12f675.h: 1483: extern volatile __bit ADCS1 __at(0x4FD);
[; ;pic12f675.h: 1486: extern volatile __bit ADCS2 __at(0x4FE);
[; ;pic12f675.h: 1489: extern volatile __bit ADFM __at(0xFF);
[; ;pic12f675.h: 1492: extern volatile __bit ADIE __at(0x466);
[; ;pic12f675.h: 1495: extern volatile __bit ADIF __at(0x66);
[; ;pic12f675.h: 1498: extern volatile __bit ADON __at(0xF8);
[; ;pic12f675.h: 1501: extern volatile __bit ANS0 __at(0x4F8);
[; ;pic12f675.h: 1504: extern volatile __bit ANS1 __at(0x4F9);
[; ;pic12f675.h: 1507: extern volatile __bit ANS2 __at(0x4FA);
[; ;pic12f675.h: 1510: extern volatile __bit ANS3 __at(0x4FB);
[; ;pic12f675.h: 1513: extern volatile __bit CAL0 __at(0x482);
[; ;pic12f675.h: 1516: extern volatile __bit CAL1 __at(0x483);
[; ;pic12f675.h: 1519: extern volatile __bit CAL2 __at(0x484);
[; ;pic12f675.h: 1522: extern volatile __bit CAL3 __at(0x485);
[; ;pic12f675.h: 1525: extern volatile __bit CAL4 __at(0x486);
[; ;pic12f675.h: 1528: extern volatile __bit CAL5 __at(0x487);
[; ;pic12f675.h: 1531: extern volatile __bit CARRY __at(0x18);
[; ;pic12f675.h: 1534: extern volatile __bit CHS0 __at(0xFA);
[; ;pic12f675.h: 1537: extern volatile __bit CHS1 __at(0xFB);
[; ;pic12f675.h: 1540: extern volatile __bit CINV __at(0xCC);
[; ;pic12f675.h: 1543: extern volatile __bit CIS __at(0xCB);
[; ;pic12f675.h: 1546: extern volatile __bit CM0 __at(0xC8);
[; ;pic12f675.h: 1549: extern volatile __bit CM1 __at(0xC9);
[; ;pic12f675.h: 1552: extern volatile __bit CM2 __at(0xCA);
[; ;pic12f675.h: 1555: extern volatile __bit CMIE __at(0x463);
[; ;pic12f675.h: 1558: extern volatile __bit CMIF __at(0x63);
[; ;pic12f675.h: 1561: extern volatile __bit COUT __at(0xCE);
[; ;pic12f675.h: 1564: extern volatile __bit DC __at(0x19);
[; ;pic12f675.h: 1567: extern volatile __bit EEIE __at(0x467);
[; ;pic12f675.h: 1570: extern volatile __bit EEIF __at(0x67);
[; ;pic12f675.h: 1573: extern volatile __bit GIE __at(0x5F);
[; ;pic12f675.h: 1576: extern volatile __bit GO __at(0xF9);
[; ;pic12f675.h: 1579: extern volatile __bit GO_DONE __at(0xF9);
[; ;pic12f675.h: 1582: extern volatile __bit GO_nDONE __at(0xF9);
[; ;pic12f675.h: 1585: extern volatile __bit GP0 __at(0x28);
[; ;pic12f675.h: 1588: extern volatile __bit GP1 __at(0x29);
[; ;pic12f675.h: 1591: extern volatile __bit GP2 __at(0x2A);
[; ;pic12f675.h: 1594: extern volatile __bit GP3 __at(0x2B);
[; ;pic12f675.h: 1597: extern volatile __bit GP4 __at(0x2C);
[; ;pic12f675.h: 1600: extern volatile __bit GP5 __at(0x2D);
[; ;pic12f675.h: 1603: extern volatile __bit GPIE __at(0x5B);
[; ;pic12f675.h: 1606: extern volatile __bit GPIF __at(0x58);
[; ;pic12f675.h: 1609: extern volatile __bit GPIO0 __at(0x28);
[; ;pic12f675.h: 1612: extern volatile __bit GPIO1 __at(0x29);
[; ;pic12f675.h: 1615: extern volatile __bit GPIO2 __at(0x2A);
[; ;pic12f675.h: 1618: extern volatile __bit GPIO3 __at(0x2B);
[; ;pic12f675.h: 1621: extern volatile __bit GPIO4 __at(0x2C);
[; ;pic12f675.h: 1624: extern volatile __bit GPIO5 __at(0x2D);
[; ;pic12f675.h: 1627: extern volatile __bit INTE __at(0x5C);
[; ;pic12f675.h: 1630: extern volatile __bit INTEDG __at(0x40E);
[; ;pic12f675.h: 1633: extern volatile __bit INTF __at(0x59);
[; ;pic12f675.h: 1636: extern volatile __bit IOC0 __at(0x4B0);
[; ;pic12f675.h: 1639: extern volatile __bit IOC1 __at(0x4B1);
[; ;pic12f675.h: 1642: extern volatile __bit IOC2 __at(0x4B2);
[; ;pic12f675.h: 1645: extern volatile __bit IOC3 __at(0x4B3);
[; ;pic12f675.h: 1648: extern volatile __bit IOC4 __at(0x4B4);
[; ;pic12f675.h: 1651: extern volatile __bit IOC5 __at(0x4B5);
[; ;pic12f675.h: 1654: extern volatile __bit IOCB0 __at(0x4B0);
[; ;pic12f675.h: 1657: extern volatile __bit IOCB1 __at(0x4B1);
[; ;pic12f675.h: 1660: extern volatile __bit IOCB2 __at(0x4B2);
[; ;pic12f675.h: 1663: extern volatile __bit IOCB3 __at(0x4B3);
[; ;pic12f675.h: 1666: extern volatile __bit IOCB4 __at(0x4B4);
[; ;pic12f675.h: 1669: extern volatile __bit IOCB5 __at(0x4B5);
[; ;pic12f675.h: 1672: extern volatile __bit IRP __at(0x1F);
[; ;pic12f675.h: 1675: extern volatile __bit PEIE __at(0x5E);
[; ;pic12f675.h: 1678: extern volatile __bit PS0 __at(0x408);
[; ;pic12f675.h: 1681: extern volatile __bit PS1 __at(0x409);
[; ;pic12f675.h: 1684: extern volatile __bit PS2 __at(0x40A);
[; ;pic12f675.h: 1687: extern volatile __bit PSA __at(0x40B);
[; ;pic12f675.h: 1690: extern volatile __bit RD __at(0x4E0);
[; ;pic12f675.h: 1693: extern volatile __bit RP0 __at(0x1D);
[; ;pic12f675.h: 1696: extern volatile __bit RP1 __at(0x1E);
[; ;pic12f675.h: 1699: extern volatile __bit T0CS __at(0x40D);
[; ;pic12f675.h: 1702: extern volatile __bit T0IE __at(0x5D);
[; ;pic12f675.h: 1705: extern volatile __bit T0IF __at(0x5A);
[; ;pic12f675.h: 1708: extern volatile __bit T0SE __at(0x40C);
[; ;pic12f675.h: 1711: extern volatile __bit T1CKPS0 __at(0x84);
[; ;pic12f675.h: 1714: extern volatile __bit T1CKPS1 __at(0x85);
[; ;pic12f675.h: 1717: extern volatile __bit T1IE __at(0x460);
[; ;pic12f675.h: 1720: extern volatile __bit T1IF __at(0x60);
[; ;pic12f675.h: 1723: extern volatile __bit T1OSCEN __at(0x83);
[; ;pic12f675.h: 1726: extern volatile __bit TMR0IE __at(0x5D);
[; ;pic12f675.h: 1729: extern volatile __bit TMR0IF __at(0x5A);
[; ;pic12f675.h: 1732: extern volatile __bit TMR1CS __at(0x81);
[; ;pic12f675.h: 1735: extern volatile __bit TMR1GE __at(0x86);
[; ;pic12f675.h: 1738: extern volatile __bit TMR1IE __at(0x460);
[; ;pic12f675.h: 1741: extern volatile __bit TMR1IF __at(0x60);
[; ;pic12f675.h: 1744: extern volatile __bit TMR1ON __at(0x80);
[; ;pic12f675.h: 1747: extern volatile __bit TRISIO0 __at(0x428);
[; ;pic12f675.h: 1750: extern volatile __bit TRISIO1 __at(0x429);
[; ;pic12f675.h: 1753: extern volatile __bit TRISIO2 __at(0x42A);
[; ;pic12f675.h: 1756: extern volatile __bit TRISIO3 __at(0x42B);
[; ;pic12f675.h: 1759: extern volatile __bit TRISIO4 __at(0x42C);
[; ;pic12f675.h: 1762: extern volatile __bit TRISIO5 __at(0x42D);
[; ;pic12f675.h: 1765: extern volatile __bit VCFG __at(0xFE);
[; ;pic12f675.h: 1768: extern volatile __bit VR0 __at(0x4C8);
[; ;pic12f675.h: 1771: extern volatile __bit VR1 __at(0x4C9);
[; ;pic12f675.h: 1774: extern volatile __bit VR2 __at(0x4CA);
[; ;pic12f675.h: 1777: extern volatile __bit VR3 __at(0x4CB);
[; ;pic12f675.h: 1780: extern volatile __bit VREN __at(0x4CF);
[; ;pic12f675.h: 1783: extern volatile __bit VRR __at(0x4CD);
[; ;pic12f675.h: 1786: extern volatile __bit WPU0 __at(0x4A8);
[; ;pic12f675.h: 1789: extern volatile __bit WPU1 __at(0x4A9);
[; ;pic12f675.h: 1792: extern volatile __bit WPU2 __at(0x4AA);
[; ;pic12f675.h: 1795: extern volatile __bit WPU4 __at(0x4AC);
[; ;pic12f675.h: 1798: extern volatile __bit WPU5 __at(0x4AD);
[; ;pic12f675.h: 1801: extern volatile __bit WR __at(0x4E1);
[; ;pic12f675.h: 1804: extern volatile __bit WREN __at(0x4E2);
[; ;pic12f675.h: 1807: extern volatile __bit WRERR __at(0x4E3);
[; ;pic12f675.h: 1810: extern volatile __bit ZERO __at(0x1A);
[; ;pic12f675.h: 1813: extern volatile __bit nBOD __at(0x470);
[; ;pic12f675.h: 1816: extern volatile __bit nBOR __at(0x470);
[; ;pic12f675.h: 1819: extern volatile __bit nDONE __at(0xF9);
[; ;pic12f675.h: 1822: extern volatile __bit nGPPU __at(0x40F);
[; ;pic12f675.h: 1825: extern volatile __bit nPD __at(0x1B);
[; ;pic12f675.h: 1828: extern volatile __bit nPOR __at(0x471);
[; ;pic12f675.h: 1831: extern volatile __bit nT1SYNC __at(0x82);
[; ;pic12f675.h: 1834: extern volatile __bit nTO __at(0x1C);
[; ;pic.h: 31: extern void __nop(void);
[; ;pic.h: 78: __attribute__((__unsupported__("The " "FLASH_READ" " macro function is no longer supported. Please use the MPLAB X MCC."))) unsigned char __flash_read(unsigned short addr);
[; ;pic.h: 80: __attribute__((__unsupported__("The " "FLASH_WRITE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_write(unsigned short addr, unsigned short data);
[; ;pic.h: 82: __attribute__((__unsupported__("The " "FLASH_ERASE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;pic.h: 92: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 94: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 137: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 138: extern __bank0 __bit __powerdown;
[; ;pic.h: 139: extern __bank0 __bit __timeout;
[; ;main.c: 69: typedef unsigned char byte;
[; ;main.c: 72: void SwitchHandler (void);
[; ;main.c: 73: void ReedEMUHandler (void);
[; ;main.c: 74: void WatchDogHandler (void);
[; ;main.c: 76: void SETpinRST (int);
[; ;main.c: 78: byte SetTMR0(unsigned int);
"81 main.c
[v _cntRST `ui ~T0 @X0 1 e ]
[; ;main.c: 81: unsigned int cntRST;
"82
[v _cntWD `ui ~T0 @X0 1 e ]
[; ;main.c: 82: unsigned int cntWD;
"83
[v _cntRSTpls `ui ~T0 @X0 1 e ]
[; ;main.c: 83: unsigned int cntRSTpls;
"85
[v _lastGPIO4mirror `uc ~T0 @X0 1 e ]
[; ;main.c: 85: byte lastGPIO4mirror;
"87
[v _TMR0_value `uc ~T0 @X0 1 e ]
[; ;main.c: 87: byte TMR0_value;
[v $root$_myIsr `(v ~T0 @X0 0 e ]
[v F565 `(v ~T0 @X0 1 tf ]
"89
[v _myIsr `IF565 ~T0 @X0 1 e ]
"90
{
[; ;main.c: 89: void interrupt myIsr(void)
[; ;main.c: 90: {
[e :U _myIsr ]
[f ]
[; ;main.c: 92: GPIObits.GP5=0b0;
"92
[e = . . _GPIObits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 93: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
"93
[e $ ! && != -> . . _INTCONbits 1 3 `i -> -> -> 0 `i `Vuc `i != -> . . _INTCONbits 1 1 `i -> -> -> 0 `i `Vuc `i 82  ]
[; ;main.c: 94: {
"94
{
[; ;main.c: 95: INTCONbits.TMR0IF = 0b0;
"95
[e = . . _INTCONbits 1 1 -> -> 0 `i `uc ]
[; ;main.c: 96: TMR0 = TMR0_value;
"96
[e = _TMR0 _TMR0_value ]
[; ;main.c: 98: if(cntRSTpls>0)
"98
[e $ ! > _cntRSTpls -> -> 0 `i `ui 83  ]
[; ;main.c: 99: {
"99
{
[; ;main.c: 100: cntRST = 10*100;
"100
[e = _cntRST -> * -> 10 `i -> 100 `i `ui ]
[; ;main.c: 101: cntWD = 60*100;
"101
[e = _cntWD -> * -> 60 `i -> 100 `i `ui ]
[; ;main.c: 102: cntRSTpls--;
"102
[e -- _cntRSTpls -> -> 1 `i `ui ]
"103
}
[; ;main.c: 103: }
[e $U 84  ]
"104
[e :U 83 ]
[; ;main.c: 104: else
[; ;main.c: 105: {
"105
{
[; ;main.c: 106: if((GPIObits.GP3==0b1) || (GPIObits.GP2==0b1))
"106
[e $ ! || == -> . . _GPIObits 0 3 `i -> 1 `i == -> . . _GPIObits 0 2 `i -> 1 `i 85  ]
[; ;main.c: 107: cntRST=10*100;
"107
[e = _cntRST -> * -> 10 `i -> 100 `i `ui ]
[e $U 86  ]
"108
[e :U 85 ]
[; ;main.c: 108: else
[; ;main.c: 109: if (cntRST>0) cntRST--;
"109
[e $ ! > _cntRST -> -> 0 `i `ui 87  ]
[e -- _cntRST -> -> 1 `i `ui ]
[e :U 87 ]
"111
[e :U 86 ]
[; ;main.c: 111: if(GPIObits.GP4!=lastGPIO4mirror)
[e $ ! != -> . . _GPIObits 0 4 `i -> _lastGPIO4mirror `i 88  ]
[; ;main.c: 112: cntWD = 60*100;
"112
[e = _cntWD -> * -> 60 `i -> 100 `i `ui ]
[e $U 89  ]
"113
[e :U 88 ]
[; ;main.c: 113: else
[; ;main.c: 114: if(cntWD>0) cntWD--;
"114
[e $ ! > _cntWD -> -> 0 `i `ui 90  ]
[e -- _cntWD -> -> 1 `i `ui ]
[e :U 90 ]
"116
[e :U 89 ]
[; ;main.c: 116: lastGPIO4mirror=GPIObits.GP4;
[e = _lastGPIO4mirror . . _GPIObits 0 4 ]
[; ;main.c: 118: if((cntWD==0) || (cntRST==0))
"118
[e $ ! || == _cntWD -> -> 0 `i `ui == _cntRST -> -> 0 `i `ui 91  ]
[; ;main.c: 119: {
"119
{
[; ;main.c: 120: SETpinRST(0b0);
"120
[e ( _SETpinRST (1 -> 0 `i ]
[; ;main.c: 121: cntWD = 60*100;
"121
[e = _cntWD -> * -> 60 `i -> 100 `i `ui ]
[; ;main.c: 122: cntRSTpls = 1*100;
"122
[e = _cntRSTpls -> * -> 1 `i -> 100 `i `ui ]
"123
}
[; ;main.c: 123: }
[e $U 92  ]
"124
[e :U 91 ]
[; ;main.c: 124: else
[; ;main.c: 125: SETpinRST(0b1);
"125
[e ( _SETpinRST (1 -> 1 `i ]
[e :U 92 ]
"126
}
[e :U 84 ]
"127
}
[e :U 82 ]
[; ;main.c: 126: }
[; ;main.c: 127: }
[; ;main.c: 128: GPIObits.GP5=0b1;
"128
[e = . . _GPIObits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 130: }
"130
[e :UE 81 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"132
[v _main `(v ~T0 @X0 1 ef ]
"133
{
[; ;main.c: 132: void main(void)
[; ;main.c: 133: {
[e :U _main ]
[f ]
[; ;main.c: 135: CMCON = 0x07;
"135
[e = _CMCON -> -> 7 `i `uc ]
[; ;main.c: 137: ANSEL = 0x00;
"137
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 141: GPIO = 0xFF;
"141
[e = _GPIO -> -> 255 `i `uc ]
[; ;main.c: 143: TRISIO0 = 0b1 ;
"143
[e = _TRISIO0 -> -> 1 `i `b ]
[; ;main.c: 144: TRISIO1 = 0b0;
"144
[e = _TRISIO1 -> -> 0 `i `b ]
[; ;main.c: 145: TRISIO3 = 0b1 ;
"145
[e = _TRISIO3 -> -> 1 `i `b ]
[; ;main.c: 146: TRISIO2 = 0b1 ;
"146
[e = _TRISIO2 -> -> 1 `i `b ]
[; ;main.c: 147: TRISIO4 = 0b1 ;
"147
[e = _TRISIO4 -> -> 1 `i `b ]
[; ;main.c: 148: TRISIO5 = 0b0 ;
"148
[e = _TRISIO5 -> -> 0 `i `b ]
[; ;main.c: 150: SETpinRST(0b1);
"150
[e ( _SETpinRST (1 -> 1 `i ]
[; ;main.c: 152: lastGPIO4mirror=GPIObits.GP4;
"152
[e = _lastGPIO4mirror . . _GPIObits 0 4 ]
[; ;main.c: 154: cntWD = 60*100;
"154
[e = _cntWD -> * -> 60 `i -> 100 `i `ui ]
[; ;main.c: 155: cntRST = 10*100;
"155
[e = _cntRST -> * -> 10 `i -> 100 `i `ui ]
[; ;main.c: 156: cntRSTpls = 0;
"156
[e = _cntRSTpls -> -> 0 `i `ui ]
[; ;main.c: 159: TMR0_value=(byte)SetTMR0(10);
"159
[e = _TMR0_value ( _SetTMR0 (1 -> -> 10 `i `ui ]
[; ;main.c: 161: INTCONbits.TMR0IE = 0b1;
"161
[e = . . _INTCONbits 1 3 -> -> 1 `i `uc ]
[; ;main.c: 162: INTCONbits.GIE = 0b1;
"162
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 164: while(1);
"164
[e :U 95 ]
[e :U 94 ]
[e $U 95  ]
[e :U 96 ]
[; ;main.c: 166: }
"166
[e :UE 93 ]
}
"168
[v _SETpinRST `(v ~T0 @X0 1 ef1`i ]
"169
{
[; ;main.c: 168: void SETpinRST(int Status)
[; ;main.c: 169: {
[e :U _SETpinRST ]
"168
[v _Status `i ~T0 @X0 1 r1 ]
"169
[f ]
[; ;main.c: 170: if (Status) {TRISIO1 = 0b1; GPIObits.GP1 = 0b1;}
"170
[e $ ! != _Status -> 0 `i 98  ]
{
[e = _TRISIO1 -> -> 1 `i `b ]
[e = . . _GPIObits 0 1 -> -> 1 `i `uc ]
}
[e $U 99  ]
"171
[e :U 98 ]
[; ;main.c: 171: else {GPIObits.GP1 = 0b0; TRISIO1 = 0b0;}
{
[e = . . _GPIObits 0 1 -> -> 0 `i `uc ]
[e = _TRISIO1 -> -> 0 `i `b ]
}
[e :U 99 ]
[; ;main.c: 174: }
"174
[e :UE 97 ]
}
"176
[v _SetTMR0 `(uc ~T0 @X0 1 ef1`ui ]
"177
{
[; ;main.c: 176: byte SetTMR0(unsigned int value_ms)
[; ;main.c: 177: {
[e :U _SetTMR0 ]
"176
[v _value_ms `ui ~T0 @X0 1 r1 ]
"177
[f ]
"178
[v _ps_value `ui ~T0 @X0 1 a ]
"179
[v _ps_cnt `ui ~T0 @X0 1 a ]
"180
[v _TMR0value `ul ~T0 @X0 1 a ]
"181
[v F574 `Cul ~T0 @X0 1 s clk_freq ]
[i F574
-> -> 1000000 `l `ul
]
[; ;main.c: 178: unsigned int ps_value;
[; ;main.c: 179: unsigned int ps_cnt;
[; ;main.c: 180: unsigned long TMR0value;
[; ;main.c: 181: const unsigned long clk_freq=1000000;
[; ;main.c: 183: for(ps_cnt=0;ps_cnt<=8;ps_cnt++)
"183
{
[e = _ps_cnt -> -> 0 `i `ui ]
[e $ <= _ps_cnt -> -> 8 `i `ui 101  ]
[e $U 102  ]
"184
[e :U 101 ]
[; ;main.c: 184: {
{
[; ;main.c: 185: ps_value=(unsigned int)0b10<<ps_cnt;
"185
[e = _ps_value << -> -> 2 `i `ui _ps_cnt ]
[; ;main.c: 186: TMR0value=clk_freq*value_ms;
"186
[e = _TMR0value * F574 -> _value_ms `ul ]
[; ;main.c: 187: TMR0value/=ps_value;
"187
[e =/ _TMR0value -> _ps_value `ul ]
[; ;main.c: 188: TMR0value/=1000;
"188
[e =/ _TMR0value -> -> 1000 `us `ul ]
[; ;main.c: 189: if(TMR0value<256) break;
"189
[e $ ! < _TMR0value -> -> -> 256 `i `l `ul 104  ]
[e $U 102  ]
[e :U 104 ]
"190
}
"183
[e ++ _ps_cnt -> -> 1 `i `ui ]
[e $ <= _ps_cnt -> -> 8 `i `ui 101  ]
[e :U 102 ]
"190
}
[; ;main.c: 190: }
[; ;main.c: 191: if(ps_cnt==8) return(0);
"191
[e $ ! == _ps_cnt -> -> 8 `i `ui 105  ]
[e ) -> -> 0 `i `uc ]
[e $UE 100  ]
[e $U 106  ]
"192
[e :U 105 ]
[; ;main.c: 192: else
[; ;main.c: 193: {
"193
{
[; ;main.c: 195: OPTION_REGbits.PSA = 0b0;
"195
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 196: OPTION_REGbits.PS = ps_cnt;
"196
[e = . . _OPTION_REGbits 0 0 -> _ps_cnt `uc ]
[; ;main.c: 197: OPTION_REGbits.T0CS = 0b0;
"197
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 199: TMR0value=0x100-TMR0value;
"199
[e = _TMR0value - -> -> -> 256 `i `l `ul _TMR0value ]
[; ;main.c: 200: TMR0=(byte)TMR0value;
"200
[e = _TMR0 -> _TMR0value `uc ]
[; ;main.c: 201: return(TMR0value);
"201
[e ) -> _TMR0value `uc ]
[e $UE 100  ]
"202
}
[e :U 106 ]
[; ;main.c: 202: }
[; ;main.c: 203: }
"203
[e :UE 100 ]
}
